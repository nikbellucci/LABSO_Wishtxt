import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;

public class ServerMethods {

    String path;


    public ServerMethods(String path) {
        this.path = path;
    }




    public String renameFile(String oldName, String newName){
        File file = new File(path+"\\" +oldName);
        File renamedFile = new File(path+"\\" +newName);
        boolean rename = file.renameTo(renamedFile); //if true the file is successfully renamed
        if(rename == true)
            return "Rename successful";
        else {
            if (renamedFile.exists()) return "Filename already exists";
            else return "Internal error"; // TODO: there might be other possible reasons for an error occurring, we could need some more specific error messages
        }

    }


    public String deleteFile(String fileName){
        File f = new File(path + "\\" + fileName);
        if(f.delete())
            return "File deleted";
        else{
            if (!f.exists()) return "File dosen't exist";
            return "internal error";
        }

    }

    public String readFile(String fileName){
        try {
            File obj = new File(path+"\\"+fileName);
            Scanner myReader = new Scanner(obj);
            String data = "";
            while (myReader.hasNextLine()) {
                data = data.concat(myReader.nextLine()+"\n");
            }
            myReader.close();
            return data.substring(0, data.length() - 2); //this substring removes the last \n that were previously concatenated

        } catch (FileNotFoundException e) {
            return "File not found";
        }
    }





    public String newFile(String fileName) {
        try {
            File obj = new File(path + "\\" + fileName);
            if (obj.createNewFile()) {
                return "File created: " + fileName;
            } else {
                return "File already exists";
            }
        } catch (IOException e) {
            e.printStackTrace();
            return "Internal error";
        }
    }

}
